#!groovy
properties([disableConcurrentBuilds()])
    pipeline {
        agent {label 'master'}
        tools { maven 'maven' }
        options {
            buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
            timestamps()
        }
        stages {
            stage('Preparation') {

                steps {
                    git url: 'https://github.com/sqshq/piggymetrics.git'
                    echo "-=- Cleaning project -=-"
                        sh 'mvn clean'
                }
            }
            stage('Building project') {
                steps {
                   echo "-=- Build project -=-"
                   sh "mvn package -Dmaven.test.skip=true"
                }
            }
            stage('Building docker image') {
                steps {
                    echo "-=- Building docker image -=-"
                    script {
                        dir ("${workspace}/config") {
                            dockerImage_config=docker.build("localhost:443/piggymetrics-config:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/registry") {
                            dockerImage_registry=docker.build("localhost:443/piggymetrics-registry:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/gateway") {
                            dockerImage_gateway=docker.build("localhost:443/piggymetrics-gateway:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/auth-service") {
                            dockerImage_auth_service=docker.build("localhost:443/piggymetrics-auth-service:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/mongodb") {
                            dockerImage_mongodb=docker.build("localhost:443/piggymetrics-mongodb:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/account-service") {
                            dockerImage_account_service=docker.build("localhost:443/piggymetrics-account-service:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/statistics-service") {
                            dockerImage_statistics_service=docker.build("localhost:443/piggymetrics-statistics-service:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/notification-service") {
                            dockerImage_notification_service=docker.build("localhost:443/piggymetrics-notification-service:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/monitoring") {
                            dockerImage_monitoring=docker.build("localhost:443/piggymetrics-monitoring:${BUILD_NUMBER}")
                        }
                        dir ("${workspace}/turbine-stream-service") {
                            dockerImage_turbine_stream_service=docker.build("localhost:443/piggymetrics-turbine-stream-service:${BUILD_NUMBER}")
                        }
                            docker.withRegistry( 'https://localhost:443' ){
                                dockerImage_config.push()
                                dockerImage_registry.push()
                                dockerImage_gateway.push()
                                dockerImage_auth_service.push()
                                dockerImage_mongodb.push()
                                dockerImage_account_service.push()
                                dockerImage_statistics_service.push()
                                dockerImage_notification_service.push()
                                dockerImage_monitoring.push()
                                dockerImage_turbine_stream_service.push()
                            }
                    }
                }
            }
            stage('Testing') {
                steps {
                    echo "-=- Testing -=-"
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        sh "mvn test"
                        script {
                            docker.withRegistry( "https://localhost:443" ){
                                dockerImage_config.push 'stable'
                                dockerImage_registry.push 'stable'
                                dockerImage_gateway.push 'stable'
                                dockerImage_auth_service.push 'stable'
                                dockerImage_mongodb.push 'stable'
                                dockerImage_account_service.push 'stable'
                                dockerImage_statistics_service.push 'stable'
                                dockerImage_notification_service.push 'stable'
                                dockerImage_monitoring.push 'stable'
                                dockerImage_turbine_stream_service.push 'stable'
                            }
                        }
                    }
                }
            }
            stage('Deploy Image') {
                agent { label 'slave1' }
                options { skipDefaultCheckout() }
                steps {
                    echo "-=- Deploy Image -=-"
                    dir ("${HOME}/CISD_piggymetrics") {
                        sh 'wget https://raw.githubusercontent.com/Zriakhov/CISD_piggymetrics/master/VM3_start.sh'
                        sh 'wget https://raw.githubusercontent.com/Zriakhov/CISD_piggymetrics/master/docker-compose.yml'
                        sh 'bash VM3_start.sh'
                        sh 'rm docker-compose.yml'
                        sh 'rm VM3_start.sh'
                    }
                    mail bcc: '', body: 'The deployment of "Piggy Metrics" project completed successfully with new build, http://10.23.27.8:80/', cc: '', from: '', replyTo: '', subject: 'Jenkins: from "pm-job"', to: 'Mykhailo_Zriakhov@epam.com'
                }
            }
        }
    }
